@startuml Deployment Diagram
!include include/c4.puml
!include include/people.puml
!include include/style.puml

Node(te, "Transformation Engine", "AWS") {
    System_Ext(te_sns, "SNS", "Notification queue")
    SystemDb_Ext(te_s3, "S3", "File transfer bucket")
    Lay_D(te_sns, te_s3)
}

Node(ee, "Enrichment Engine", "AWS") {
    System_Ext(enrichment, "Enrichment Engine")
}

Node(account, "Case Law System", "AWS"){
    Node(ecs, "Elastic Container Service"){
        Container(publicui, "Public UI", "Django", $sprite="docker")
        Container(editorui, "Editor UI", "Django", $sprite="docker")
    }
    System(api_lb, "Elastic Load Balancing", "Distributes API demand across Marklogic nodes", $sprite="aws")
    Node(ec2, "EC2"){
        Node(marklogic, "Marklogic Server") {
            SystemDb(db, "Marklogic", "Document and service metadata store")
            Container(api, "REST API", "Javascript", $tags="Marklogic Application")
            Container(parser, "Alpha Parser", $tags="Marklogic Application")
            BiRel(api, db, "queries", "XQuery")
            BiRel(parser, db, "queries", "XQuery")
        }
    }
    BiRel_D(api_lb, api, "proxies", "HTTPS")
    Node(lambda, "Lambda"){
        Container(ingester, "Ingester", "Javascript", $sprite="aws")
    }
    System(cache, "Cloudfront", "Public UI web cache", $sprite="aws")
    System(pubsub, "SNS", "Change notifications", $sprite="aws")
    Rel(publicui, api_lb, "reads from", "HTTPS")
    Rel(cache, publicui, "reads from", "HTTPS")
    BiRel(editorui, api_lb, "reads/writes", "HTTPS")
    Rel(api, pubsub, "publishes change notification")
}

BiRel(ingester, te_sns, "subscribes/notifies", "SNS")
Rel(ingester, te_s3, "reads from", "HTTPS")
Rel_U(ingester, api_lb, "writes to", "HTTPS")

Rel(joepublic, cache, "browses", "HTTPS")

Rel(editor, editorui, "uses", "HTTPS")
Rel(editor, parser, "uses for advanced ingestion", "HTTPS", $tags="fallback")
Rel(ingester, editor, "notifies", "email")

BiRel(enrichment, api_lb, "reads/writes", "HTTPS")
BiRel(enrichment, pubsub, "subscribes/notifies", "SNS")

Rel(apiUser, api_lb, "reads", "HTTPS")

Lay_R(pubsub, enrichment)

!include include/display.puml
@enduml
